<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小小小黄的博客</title>
  
  <subtitle>学习记录本</subtitle>
  <link href="http://xuzb0312.github.io/atom.xml" rel="self"/>
  
  <link href="http://xuzb0312.github.io/"/>
  <updated>2022-03-04T13:07:25.420Z</updated>
  <id>http://xuzb0312.github.io/</id>
  
  <author>
    <name>徐振斌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二分查找（力扣算法题）</title>
    <link href="http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    <id>http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</id>
    <published>2022-03-04T12:54:57.000Z</published>
    <updated>2022-03-04T13:07:25.420Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><p><strong>时间复杂度：</strong>O(\log x)O(logx)，每一次搜索的区间大小约为原来的 1&#x2F;2，时间复杂度为 O(\log_2 x) &#x3D; O(\log x)O(log 2x)&#x3D;O(logx)；<br><strong>空间复杂度</strong>：O(1)O(1)。</p><h3 id="704-二分查找"><a href="#704-二分查找" class="headerlink" title="704. 二分查找"></a>704. 二分查找</h3><p>在什么条件下可以使用二分查找呢？</p><p>只要看到给出的数组是<strong>有序数组</strong>、就可以尝试使用二分查找。</p><p>主要注意的是还需要一个条件，<strong>数组无重复</strong>，因为一旦有重复的元素，使用二分查找返回的元素下标不是唯一的。</p><p>二分查找最需要注意的就是——-区间问题。</p><p>例如到底是 <code>while(left &lt; right)</code> 还是 <code>while(left &lt;= right)</code>，到底是<code>right = middle</code>呢，还是要<code>right = middle - 1</code>呢？</p><p>【】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="comment">// 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算</span></span><br><span class="line">        <span class="keyword">if</span> (target &lt; nums[<span class="number">0</span>] || target &gt; nums[nums.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right - left) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &lt; target)</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target)</span><br><span class="line">                right = mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>使用while(left &lt; right)的时候，最后还要单独再判断一次 nums[left] 和target 相不相等。为什么？</p><p>举个例子， 输入数组为 [2, 5]， target &#x3D; 5 如果不判断，第一次循环后， left &#x3D;&#x3D; right， 他就跳出循环了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="comment">//简单的二分查找</span></span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="literal">null</span> || nums.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//小知识点： java数组的最大长度为int的最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left + right) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (target == nums[mid]) &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; nums[mid]) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//此时left = right</span></span><br><span class="line">        <span class="keyword">return</span> target &lt;= nums[left] ? left : left + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//在只有一个元素的时候会出现=</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>为什么没有找到target返回left？？</p><p>注意：以下讨论的是<code>没有</code>找到target</p><p>很容易想象，经过每次while循环，都会使得<code>[left,right]</code>的左闭右闭区间中的元素减少。</p><p>那就有一个问题，减少到最后会是什么情况？</p><p>那就是进入最后一次while循环前，[left,right]的左闭右闭区间中只有一个或者两个元素，即</p><p>left和right的位置有且仅有<code>2</code>种情况</p><ul><li><p><code>left = right</code></p><p>或</p></li><li><p><code>left = right -1</code></p></li></ul><p>为什么？ 举几个特例</p><ul><li>数组有一个元素，那么left &#x3D; right，还需要最后一次while循环</li><li>数组有两个元素，那么left &#x3D; right -1, 分<code>两种情况</code>，需要一或两次while循环<ol><li>比如数组 [1,3] ,target&#x3D;0，此时<code>left = right -1</code>, 然后还需最后一次while</li><li>比如数组 [1,3] ,target&#x3D;2，一次while循环后，left &#x3D; right &#x3D;1，并且变成了一个元素的情况，还要一次while，一共是2个while</li></ol></li><li>数组有三个，四个元素等等，都以此类推，最后都会变成以上的情况</li></ul><p>综上，数组最后会变为<code>一个元素</code>，或者两个元素中的<code>情况1</code></p><p>以上就解释清楚了，在进入最后一次while循环前，数组会变为一个或两个元素。</p><p>以下是一个元素和两个元素(<code>情况1</code>)的代码注释</p><ol><li>数组只有一个元素，假设nums&#x3D;[1]，left &#x3D; right</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">初始化<span class="attribute">left</span> = rigth=<span class="number">0</span></span><br><span class="line">while(left &lt; =right)&#123;         //进入最后一次循环</span><br><span class="line">     <span class="attribute">int</span> mid = (left + right) / <span class="number">2</span>;         //<span class="attribute">mid</span> =<span class="number">0</span>, 此时`left = mid = right=<span class="number">0</span>`</span><br><span class="line">     if (target == nums[mid]) &#123;          </span><br><span class="line">         <span class="attribute">return</span> mid;        //若找到，直接返回mid，下面两个else是没有找到target的情况</span><br><span class="line">     &#125; <span class="attribute">else</span> if (target &lt; nums[mid]) &#123;   </span><br><span class="line">         <span class="attribute">right</span> = mid - <span class="number">1</span>;  //此时数组中仅剩的最后一个数比target大，执行right=mid-1=-1, 而left=0正是要插入的位置</span><br><span class="line">     &#125; <span class="section">else</span> &#123;</span><br><span class="line">         <span class="attribute">left</span> = mid + <span class="number">1</span>;    //此时数组中仅剩的最后一个数比target小，执行<span class="attribute">left</span> =mid+<span class="number">1</span>=<span class="number">1</span>,  left=<span class="number">1</span>正是要插入的位置</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;//循环结束</span><br></pre></td></tr></table></figure><ol><li>数组有两个元素(<code>情况1</code>)，假设nums&#x3D;[1，3]，target &#x3D;0, left &#x3D; right -1</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">初始化<span class="attribute">left</span> = <span class="number">0</span>, rigth=<span class="number">1</span></span><br><span class="line">while(left &lt; =right)&#123;         //进入最后一次循环</span><br><span class="line">     <span class="attribute">int</span> mid = (left + right) / <span class="number">2</span>;         //<span class="attribute">mid</span> =<span class="number">0</span>, 此时`left = mid =<span class="number">0</span> , right =<span class="number">1</span> `</span><br><span class="line">     if (target == nums[mid]) &#123;          </span><br><span class="line">         <span class="attribute">return</span> mid;        //若找到，直接返回mid，下面两个else是没有找到target的情况</span><br><span class="line">     &#125; <span class="attribute">else</span> if (target &lt; nums[mid]) &#123;   </span><br><span class="line">         <span class="attribute">right</span> = mid - <span class="number">1</span>;  //此时<span class="attribute">target</span> &lt; nums[<span class="number">0</span>]，执行right=mid-<span class="number">1</span>=-<span class="number">1</span>, 而left=<span class="number">0</span>正是要插入的位置</span><br><span class="line">     &#125; else &#123;</span><br><span class="line">         <span class="attribute">left</span> = mid + <span class="number">1</span>;    //此时<span class="attribute">target</span> &gt; nums[<span class="number">0</span>]，执行left =mid+<span class="number">1</span>=<span class="number">1</span>,  left=<span class="number">1</span>正是要插入的位置</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;//循环结束</span><br></pre></td></tr></table></figure><p>总结：</p><p>1个元素的情况很简单，随便举个特例就行，如[1],target&#x3D;0或3。</p><p>2个元素中的<code>情况1</code>也可以举个特例，如[1, 3],target&#x3D;0。</p><p>都能发现，没有找到target返回left即可。</p><h3 id="35-搜索插入位置"><a href="#35-搜索插入位置" class="headerlink" title="35. 搜索插入位置"></a><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></h3><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>你可以假设数组中无重复元素</p><ul><li>目标值在数组所有元素之前</li><li>目标值等于数组中某一个元素</li><li>目标值插入数组中的位置</li><li>目标值在数组所有元素之后</li></ul><p>同时题目还强调数组中无重复元素，因为一旦有重复元素，使用二分查找法返回的元素下标可能不是唯一的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;<span class="comment">//【】</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ((right-left)/<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]&gt;target)&#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target)&#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;<span class="comment">//或者right+1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>最后为什么返回left或者right+1</strong></p><p><strong>题解给的是左闭右闭解法，根据本题必须 return left &#x2F; return right+1，因为只要能缩小范围（你 left 或 right 赋值没出错），最后一定是 left &#x3D;&#x3D; right &#x3D;&#x3D; middle，此时只要分别分析下大于 nums[middle] 与 小于 nums[middle] 的两种情况就可以得出结论：两种情况都是 return left。 但如果是左闭右开解法，那么 return left&#x2F;right 都可以，不过要判断 target 是否会大于 nums[length-1] 这个最大值</strong></p><h3 id="34在排序数组中查找元素的第一个和最后一个位置"><a href="#34在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="34在排序数组中查找元素的第一个和最后一个位置"></a>34<a href="https://leetcode-cn.com/problems/find-first-and-last-position-of-element-in-sorted-array/">在排序数组中查找元素的第一个和最后一个位置</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] searchRange(<span class="type">int</span>[] nums, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123;-<span class="number">1</span>, -<span class="number">1</span>&#125;;</span><br><span class="line">        res[<span class="number">0</span>] = binarySearch(nums, target, <span class="literal">true</span>);</span><br><span class="line">        res[<span class="number">1</span>] = binarySearch(nums, target, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//leftOrRight为true找左边界 false找右边界</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target, <span class="type">boolean</span> leftOrRight)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length - <span class="number">1</span>, mid;</span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right) &#123;</span><br><span class="line">            mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(target &lt; nums[mid])</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target &gt; nums[mid])</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                res = mid;</span><br><span class="line">                <span class="comment">//处理target == nums[mid]</span></span><br><span class="line">                <span class="keyword">if</span>(leftOrRight)</span><br><span class="line">                    right = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="type">else</span></span><br><span class="line">                    <span class="variable">left</span> <span class="operator">=</span> mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿[1,3,3,3,4]，target &#x3D; 3举例，第一次二分mid &#x3D; 2，但是nums[2]的3并不是最左边界的3，然后leftOrRight为true，表示查找左侧边界的，所以要缩小右边界，right需要往左移，也就是right &#x3D; mid-1，false 则相反，要查找右侧边界，即扩大左边界</p><h3 id="69-x的平方根"><a href="#69-x的平方根" class="headerlink" title="69 x的平方根"></a>69 x的平方根</h3><ul><li>这道题要求我们实现平方根函数，输入是一个非负整数，输出也是一个整数；</li><li>但是题目当中说：结果只保留整数的部分，小数部分将被舍去。</li></ul><p>从题目的要求和示例我们可以看出，这其实是一个查找整数的问题，并且这个整数是有范围的。</p><ul><li>如果这个整数的平方 恰好等于 输入整数，那么我们就找到了这个整数；</li><li>如果这个整数的平方 严格大于 输入整数，那么这个整数肯定不是我们要找的那个数；</li><li><strong>如果这个整数的平方 严格小于 输入整数，那么这个整数 可能 是我们要找的那个数</strong>（重点理解这句话）</li></ul><p>参考</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="function">def <span class="title">mySqrt</span><span class="params">(self, x: <span class="type">int</span>)</span> -&gt; <span class="type">int</span>:</span></span><br><span class="line"><span class="function">        l =</span> <span class="number">0</span></span><br><span class="line">        r = x</span><br><span class="line">        <span class="keyword">while</span> l &lt;= r:</span><br><span class="line">            mid = (l+r)<span class="comment">//2</span></span><br><span class="line">            temp = mid**<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span>  temp &lt; x:</span><br><span class="line">                l = mid + <span class="number">1</span></span><br><span class="line">            elif temp &gt; x:</span><br><span class="line">                r = mid - <span class="number">1</span></span><br><span class="line">            elif temp == x:</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">        <span class="meta"># r一定会停在mid**2 &lt;= x的最大那个mid的位置，因为mid**2=x的mid如果存在的话在上面</span></span><br><span class="line">        # 就已经返回了，所以这里只需要返回r就好了</span><br><span class="line">        <span class="keyword">return</span> r </span><br></pre></td></tr></table></figure><p>自己写的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="comment">//先判断特殊情况</span></span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>||x==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span>x/<span class="number">2</span>;   <span class="comment">//通过常理判断，平方根都不会超过x的一半</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;<span class="comment">//防止溢出</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left+((right-left)/<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(mid &gt; x/mid)&#123;</span><br><span class="line">                <span class="comment">//平方比目标值大，那就缩小right 【left，mid-1】</span></span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mid &lt; x/mid)&#123;</span><br><span class="line">                <span class="comment">//平方比目标值小，那就增大left 【mid+1，right】</span></span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//正好相等</span></span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后为什么要返回right呢？</span></span><br><span class="line">        <span class="comment">//right一定会停在mid**2 &lt;= x的最大那个mid的位置，因为mid**2=x的mid如果存在的话在上面就已经</span></span><br><span class="line">        <span class="comment">//返回了，所以这里只需要返回r就好了</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> right;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果没有出现 mid &#x3D;&#x3D; x &#x2F; mid 的情况，最后到底是 return right 还是 return left？<br>1、可以通过调试得出；</p><p>2、循环结束的条件：left &#x3D; right + 1，示例中提示了当 x &#x3D; 8，其平方根是 2，有点类似于向下取整，循环退出时 left &#x3D; 3, 所以返回时 right。</p><h4 id="另一种解题思路"><a href="#另一种解题思路" class="headerlink" title="另一种解题思路"></a>另一种解题思路</h4><ul><li>整数x的平方根一定小于或等于x</li><li>除0之外的所有整数的平方根都大于或等于1</li><li>整数x的平方根一定是在1到x的范围内，取这个范围内的中间数字mid，并判断mid的平方是否小于或等于x，如果mid的平方小于x</li><li>那么接着判断(mid+1)的平方是否大于x，如果(mid+1)的平方大于x，那么mid就是x的平方根</li><li>如果mid的平方小于x并且(mid+1)的平方小于x，那么x的平方根比mid大，接下来搜索从mid+1到x的范围</li><li>如果mid的平方大于x，则x的平方根小于mid，接下来搜索1到mid-1的范围</li><li>然后在相应的范围内重复这个过程，总是取出位于范围中间的mid</li></ul>]]></content>
    
    
    <summary type="html">（打卡Day02） 对二分查找这个算法的理解，以及使用与联系，弄清楚所谓的区间问题；</summary>
    
    
    
    <category term="算法" scheme="http://xuzb0312.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="http://xuzb0312.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="二分查找" scheme="http://xuzb0312.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
    <category term="算法打卡" scheme="http://xuzb0312.github.io/tags/%E7%AE%97%E6%B3%95%E6%89%93%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>双指针（力扣算法题）</title>
    <link href="http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    <id>http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E5%8F%8C%E6%8C%87%E9%92%88/</id>
    <published>2022-03-04T12:54:57.000Z</published>
    <updated>2022-03-04T13:10:32.528Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><h3 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27 移除元素"></a>27 移除元素</h3><p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要 <strong><a href="https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95">原地</a></strong> 移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。</p><p>思想还是双指针算法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">fast</span> <span class="operator">=</span> <span class="number">0</span>;fast&lt;nums.length;fast++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fast]!=val)&#123;</span><br><span class="line">                nums[low]=nums[fast];</span><br><span class="line">                low++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> low;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26. 删除有序数组中的重复项"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">26. 删除有序数组中的重复项</a></h3><p>给你一个 <strong>升序排列</strong> 的数组 <code>nums</code> ，请你**<a href="http://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95"> 原地</a>** 删除重复出现的元素，使每个元素 <strong>只出现一次</strong> ，返回删除后数组的新长度。元素的 <strong>相对顺序</strong> 应该保持 <strong>一致</strong> 。</p><p>思路：</p><p>思路：理解题意，如果1和3不相等，就把3放到2。快慢指针，不占用新空间，相当于创建一个新数组，不相等就放进去，相等就跳过。最后返回新数组的长度，需要注意，最后返回的是下标，需要加一才是长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeDuplicates</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> nums.length;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;nums.length;i++)&#123;<span class="comment">//把j看成一个新数组就可以新数组第一个一定不会重复不用考虑，从第二个开始</span></span><br><span class="line">            <span class="keyword">if</span>(nums[j]!=nums[i])&#123;<span class="comment">//要是i等于j这个数组前一个元素，就不把它放进来</span></span><br><span class="line"></span><br><span class="line">                nums[++j]=nums[i];<span class="comment">//不相等时就把i这个元素放到j这个数组的下一个元素里面</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//j代表下标，j+1，代表长度。</span></span><br><span class="line">        <span class="keyword">return</span> ++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="283-移动零"><a href="#283-移动零" class="headerlink" title="283 移动零"></a>283 移动零</h3><p>给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p><p>和删除元素差不多，将最后的那些元素全部赋值为0即可。</p><p>思路</p><p>与删除元素几乎一样，只不过最后多了一步将剩余的数组变成0，双指针法创造一个新的数组，需要注意的是，在跳出循环前，慢指针以及进行+1，现在指向的是需要变成0的那个index，不需要再进行+1了，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">fast</span> <span class="operator">=</span> <span class="number">0</span>;fast&lt;nums.length;fast++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[fast]!=<span class="number">0</span>)&#123;</span><br><span class="line">                nums[low++]=nums[fast];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span>low;i&lt;nums.length;i++)&#123;</span><br><span class="line">            nums[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="977-有序数组的平方（双指针）"><a href="#977-有序数组的平方（双指针）" class="headerlink" title="977 有序数组的平方（双指针）"></a>977 有序数组的平方（双指针）</h3><p>给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。</p><p>示例 1： 输入：nums &#x3D; [-4,-1,0,3,10] 输出：[0,1,9,16,100] 解释：平方后，数组变为 [16,1,0,9,100]，排序后，数组变为 [0,1,9,16,100]</p><p>示例 2： 输入：nums &#x3D; [-7,-3,2,3,11] 输出：[4,9,9,49,121]</p><p><strong>解题思路：</strong></p><p>此时可以考虑双指针法了，i指向起始位置，j指向终止位置。</p><p>定义一个新数组result，和A数组一样的大小，让k指向result数组终止位置。</p><p>如果<code>A[i] * A[i] &lt; A[j] * A[j]</code> 那么<code>result[k--] = A[j] * A[j];</code> 。</p><p>如果<code>A[i] * A[i] &gt;= A[j] * A[j]</code> 那么<code>result[k--] = A[i] * A[i];</code> 。</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84_%E5%8F%8C%E6%8C%87%E9%92%88/977.%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9.gif" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length-<span class="number">1</span>;<span class="comment">//双指针法，从两端开始。</span></span><br><span class="line">        <span class="type">int</span> [] result = <span class="keyword">new</span> <span class="title class_">int</span>[nums.length];<span class="comment">//新建一个数组，来放置排序后的数组</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> result.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="keyword">if</span>( nums[left]*nums[left] &lt; nums[right]*nums[right]) &#123;</span><br><span class="line">                result[index--] = nums[right] * nums[right];</span><br><span class="line">                right--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                result[index--] = nums[left] * nums[left];</span><br><span class="line">                left++;<span class="comment">//++j与j++在这里都可以。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">（打卡Day02） 对双指针这个算法的理解，移除元素，以及最后到底是返回r还是l；</summary>
    
    
    
    <category term="算法" scheme="http://xuzb0312.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="http://xuzb0312.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="算法打卡" scheme="http://xuzb0312.github.io/tags/%E7%AE%97%E6%B3%95%E6%89%93%E5%8D%A1/"/>
    
    <category term="双指针" scheme="http://xuzb0312.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>滑动窗口（力扣算法题）</title>
    <link href="http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    <id>http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84_%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</id>
    <published>2022-03-04T12:54:57.000Z</published>
    <updated>2022-03-04T13:10:06.612Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h2><h3 id="209、长度最小的子数组"><a href="#209、长度最小的子数组" class="headerlink" title="209、长度最小的子数组"></a>209、长度最小的子数组</h3><p><strong>题目：</strong></p><p>给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的 连续 子数组，并返回其长度。如果不存在符合条件的子数组，返回 0。</p><p>示例：</p><p>输入：s &#x3D; 7, nums &#x3D; [2,3,1,2,4,3] 输出：2 解释：子数组 [4,3] 是该条件下的长度最小的子数组。</p><p><strong>思路：</strong></p><p>自己暂时只想起来了双重for循环暴力破解，但是时间复杂度是O（n^2）;</p><p><strong>暴力破解</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="comment">//int result = 0;//最后结果长度     出现错误，不可以等于0，因为0肯定是最小的。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> Integer.MAX_VALUE;<span class="comment">//赋值给result int的最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">leng</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//和</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            sum = <span class="number">0</span>;<span class="comment">//外层循环一次就清0一次。</span></span><br><span class="line">            leng =<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;j&lt;nums.length;j++)&#123;<span class="comment">//内层循环用于相加。</span></span><br><span class="line">                sum+=nums[j];</span><br><span class="line">                leng++;</span><br><span class="line">                <span class="keyword">if</span>(sum&gt;=target)&#123;</span><br><span class="line">                    result = result&gt;=leng?leng:result;</span><br><span class="line">                    <span class="keyword">break</span>;<span class="comment">//退出内层循环</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result==Integer.MAX_VALUE?<span class="number">0</span>:result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>滑动窗口</strong></p><p>所谓滑动窗口，<strong>就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果</strong>。</p><p>这里还是以题目中的示例来举例，s&#x3D;7， 数组是 2，3，1，2，4，3，来看一下查找的过程：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84_%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/209.%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84.gif" alt="209.长度最小的子数组"></p><p>最后找到 4，3 是最短距离。</p><p>其实从动画中可以发现滑动窗口也可以理解为双指针法的一种！只不过这种解法更像是一个窗口的移动，所以叫做滑动窗口更适合一些。</p><p>在本题中实现滑动窗口，主要确定如下三点：</p><ul><li>窗口内是什么？</li><li>如何移动窗口的起始位置？</li><li>如何移动窗口的结束位置？</li></ul><p>窗口就是 满足其和 ≥ s 的长度最小的 连续 子数组。</p><p>窗口的起始位置如何移动：如果当前窗口的值大于s了，窗口就要向前移动了（也就是该缩小了）。</p><p>窗口的结束位置如何移动：窗口的结束位置就是遍历数组的指针，窗口的起始位置设置为数组的起始位置就可以了。</p><p>解题的关键在于 窗口的起始位置如何移动，如图所示：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84_%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/20210312160441942.png" alt="leetcode_209"></p><p>可以发现<strong>滑动窗口的精妙之处在于根据当前子序列和大小的情况，不断调节子序列的起始位置。从而将$O(n^2)$的暴力解法降为$O(n)$。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> Integer.MAX_VALUE;<span class="comment">//赋值给result int的最大值</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">subleng</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//窗口长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span><span class="number">0</span>;<span class="comment">//左边的起始指针</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;nums.length;i++)&#123;<span class="comment">//i是窗口右边的指针</span></span><br><span class="line">                sum+=nums[i];</span><br><span class="line">                <span class="keyword">while</span>(sum&gt;=target)&#123;</span><br><span class="line">                    subleng=i-j+<span class="number">1</span>;<span class="comment">//窗口大小</span></span><br><span class="line">                    result = result &gt;= subleng?subleng:result;<span class="comment">//判断返回的长度与现在的长度哪个更小。</span></span><br><span class="line">                    sum-=nums[j++];</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result==Integer.MAX_VALUE?<span class="number">0</span>:result;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：$O(n)$<br>空间复杂度：$O(1)$</p><p>不要以为for里放一个while就以为是$O(n^2)$啊， 主要是看每一个元素被操作的次数，每个元素在滑动窗后进来操作一次，出去操作一次，每个元素都是被被操作两次，所以时间复杂度是 2 × n 也就是$O(n)$。</p><h3 id="904-水果成篮"><a href="#904-水果成篮" class="headerlink" title="904. 水果成篮"></a><a href="https://leetcode-cn.com/problems/fruit-into-baskets/">904. 水果成篮</a></h3><p>你正在探访一家农场，农场从左到右种植了一排果树。这些树用一个整数数组 fruits 表示，其中 fruits[i] 是第 i 棵树上的水果 种类 。</p><p>你想要尽可能多地收集水果。然而，农场的主人设定了一些严格的规矩，你必须按照要求采摘水果：</p><p>你只有 两个 篮子，并且每个篮子只能装 单一类型 的水果。每个篮子能够装的水果总量没有限制。<br>你可以选择任意一棵树开始采摘，你必须从 每棵 树（包括开始采摘的树）上 恰好摘一个水果 。采摘的水果应当符合篮子中的水果类型。每采摘一次，你将会向右移动到下一棵树，并继续采摘。<br>一旦你走到某棵树前，但水果不符合篮子的水果类型，那么就必须停止采摘。<br>给你一个整数数组 fruits ，返回你可以收集的水果的 最大 数目。</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84_%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/image-20220304204703486.png" alt="image-20220304204703486"></p><ul><li>说人话的问题描述:满足子数组只包含最多2个不同值的最长子数组长度。</li><li>考虑以每个元素为数组结尾的满足题意的最大长度。</li><li>right表示结尾元素，left表示开头元素，初始值均为0。</li><li>不断移动right，直到子数组不满足题意。</li><li>当不满足题意时，就不断移动left，直到满足题意。</li><li>此时就是以right为结尾的满足题意的最大长度。</li><li>每次移动一次right，就记录以right为结尾的满足题意的子数组的长度的最大值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">totalFruit</span><span class="params">(<span class="type">int</span>[] fruits)</span> &#123;</span><br><span class="line">       HashMap&lt;Integer,Integer&gt; map= <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">R</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="type">int</span> <span class="variable">sub</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span>(R=<span class="number">0</span>;R&lt;fruits.length;R++)&#123;</span><br><span class="line">           <span class="comment">//首先判断map中是否存在这个值</span></span><br><span class="line">           <span class="type">int</span> <span class="variable">value</span> <span class="operator">=</span> map.containsKey(fruits[R])?map.get(fruits[R]):<span class="number">0</span>;</span><br><span class="line">           map.put(fruits[R],value+<span class="number">1</span>);<span class="comment">//将R放进窗口，值+1</span></span><br><span class="line">           <span class="keyword">if</span>(map.size()&gt;=<span class="number">3</span>)&#123;<span class="comment">//如果map中的种类大于2</span></span><br><span class="line">                map.put(fruits[L],map.get(fruits[L])-<span class="number">1</span>);<span class="comment">//缩小窗口,将值减一</span></span><br><span class="line">                <span class="keyword">if</span>(map.get(fruits[L])==<span class="number">0</span>)&#123;<span class="comment">//如果map中，这个种类等于0，那么将移除它</span></span><br><span class="line">                    map.remove(fruits[L]);</span><br><span class="line">                &#125;</span><br><span class="line">                L++;<span class="comment">//缩小窗口</span></span><br><span class="line">           &#125;</span><br><span class="line">           sub=R-L+<span class="number">1</span>;</span><br><span class="line">           result=result&gt;sub?result:sub;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法基本学习完毕，需要巩固"><a href="#方法基本学习完毕，需要巩固" class="headerlink" title="方法基本学习完毕，需要巩固"></a>方法基本学习完毕，需要巩固</h2><ol><li>二分查找</li><li>快慢指针</li><li>双指针</li><li>滑动窗口</li></ol>]]></content>
    
    
    <summary type="html">（打卡Day03） 对滑动窗口算法进行学习与研究，类似于双指针，对窗口的大小灵巧的控制是关键；</summary>
    
    
    
    <category term="算法" scheme="http://xuzb0312.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="http://xuzb0312.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="算法打卡" scheme="http://xuzb0312.github.io/tags/%E7%AE%97%E6%B3%95%E6%89%93%E5%8D%A1/"/>
    
    <category term="滑动窗口" scheme="http://xuzb0312.github.io/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>数组的概念</title>
    <link href="http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    <id>http://xuzb0312.github.io/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/</id>
    <published>2022-03-04T12:54:57.000Z</published>
    <updated>2022-03-04T13:10:59.215Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="数组基础理论"><a href="#数组基础理论" class="headerlink" title="数组基础理论"></a>数组基础理论</h2><p>数组是非常基础的数据结构，在面试中，考察数组的题目一般在思维上都不难，主要是考察对代码的掌控能力</p><p>也就是说，想法很简单，但实现起来 可能就不是那么回事了。</p><p>首先要知道数组在内存中的存储方式，这样才能真正理解数组相关的面试题</p><p><strong>数组是存放在连续内存空间上的相同类型数据的集合。</strong></p><p>数组可以方便的通过下标索引的方式获取到下标下对应的数据。</p><p>举一个字符数组的例子，如图所示：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E6%95%B0%E7%BB%84.png" alt="算法通关数组"></p><p>需要两点注意的是</p><ul><li><strong>数组下标都是从0开始的。</strong></li><li><strong>数组内存空间的地址是连续的</strong></li></ul><p>正是<strong>因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。</strong></p><p>例如删除下标为3的元素，需要对下标为3的元素后面的所有元素都要做移动操作，如图所示：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E6%95%B0%E7%BB%841.png" alt="算法通关数组1"></p><p>而且大家如果使用C++的话，要注意vector 和 array的区别，vector的底层实现是array，严格来讲vector是容器，不是数组。</p><p><strong>数组的元素是不能删的，只能覆盖。</strong></p><p>那么二维数组直接上图，大家应该就知道怎么回事了</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E9%80%9A%E5%85%B3%E6%95%B0%E7%BB%842.png" alt="算法通关数组2"></p><p><strong>那么二维数组在内存的空间地址是连续的么？</strong></p><p>不同编程语言的内存管理是不一样的，以C++为例，在C++中二维数组是连续分布的。</p><p>我们来做一个实验，C++测试代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">test_arr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> array[<span class="number">2</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>&#125;,</span><br><span class="line">&#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    cout &lt;&lt; &amp;array[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; &amp;array[<span class="number">0</span>][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; &amp;array[<span class="number">0</span>][<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; &amp;array[<span class="number">1</span>][<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; &amp;array[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; &amp;array[<span class="number">1</span>][<span class="number">2</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">test_arr</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试地址为</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0x7ffee4065820 0x7ffee4065824 0x7ffee4065828</span><br><span class="line">0x7ffee406582c 0x7ffee4065830 0x7ffee4065834</span><br></pre></td></tr></table></figure><p>注意地址为16进制，可以看出二维数组地址是连续一条线的。</p><p>一些录友可能看不懂内存地址，我就简单介绍一下， 0x7ffee4065820 与 0x7ffee4065824 差了一个4，就是4个字节，因为这是一个int型的数组，所以两个相邻数组元素地址差4个字节。</p><p>0x7ffee4065828 与 0x7ffee406582c 也是差了4个字节，在16进制里8 + 4 &#x3D; c，c就是12。</p><p>如图：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/20210310150641186.png" alt="数组内存"></p><p><strong>所以可以看出在C++中二维数组在地址空间上是连续的</strong>。</p><p>像Java是没有指针的，同时也不对程序员暴露其元素的地址，寻址操作完全交给虚拟机。</p><p>所以看不到每个元素的地址情况，这里我以Java为例，也做一个实验。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test_arr</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span>[][] arr = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;, &#123;<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;, &#123;<span class="number">9</span>,<span class="number">9</span>,<span class="number">9</span>&#125;&#125;;</span><br><span class="line">    System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">1</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">2</span>]);</span><br><span class="line">    System.out.println(arr[<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的地址为：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[I@7852e922</span><br><span class="line">[I@4e25154f</span><br><span class="line">[I@70dea4e</span><br><span class="line">[I@5c647e05</span><br></pre></td></tr></table></figure><p>这里的数值也是16进制，这不是真正的地址，而是经过处理过后的数值了，我们也可以看出，二维数组的每一行头结点的地址是没有规则的，更谈不上连续。</p><p>所以Java的二维数组可能是如下排列的方式：</p><p><img src="/2022/03/04/%E6%95%B0%E7%BB%84%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/20201214111631844.png" alt="算法通关数组3"></p><p>这里面试中数组相关的理论知识就介绍完了。</p>]]></content>
    
    
    <summary type="html">数组的存储结构，以及理论基础等面试中会遇到的基础介绍，数组内存地址是连续的，不可删除元素，只能覆盖，一个数组中只能存放一个类型的元素；</summary>
    
    
    
    <category term="算法" scheme="http://xuzb0312.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数组" scheme="http://xuzb0312.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="概念" scheme="http://xuzb0312.github.io/tags/%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot（峰迷商城）</title>
    <link href="http://xuzb0312.github.io/2022/03/03/SpringBoot/"/>
    <id>http://xuzb0312.github.io/2022/03/03/SpringBoot/</id>
    <published>2022-03-03T04:12:57.000Z</published>
    <updated>2022-03-03T11:01:19.382Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="一、项目整合与部署存在的问题"><a href="#一、项目整合与部署存在的问题" class="headerlink" title="一、项目整合与部署存在的问题"></a>一、项目整合与部署存在的问题</h1><h2 id="1-1、SSM手动整合存在的问题"><a href="#1-1、SSM手动整合存在的问题" class="headerlink" title="1.1、SSM手动整合存在的问题"></a>1.1、SSM手动整合存在的问题</h2><ul><li>步骤多，配置繁琐<ul><li>创建Maven</li><li>部署mybatis：添加依赖、创建配置文件</li><li>部署Spring、SpringMVC：添加依赖、创建配置文件</li><li>添加整合依赖</li><li>整合配置</li></ul></li><li>将项目部署到主机上，分为几步？<ol><li>安装JDK</li><li>安装Tomcat</li><li>安装MySQL</li><li>打包SSM项目</li><li>部署项目：将war包放到Tomcat里面</li><li>启动Tomcat</li></ol></li><li>项目进行服务器部署步骤繁琐，需要手动部署</li></ul><h2 id="1-2、如何简化这些繁琐的配置和部署步骤？"><a href="#1-2、如何简化这些繁琐的配置和部署步骤？" class="headerlink" title="1.2、如何简化这些繁琐的配置和部署步骤？"></a>1.2、如何简化这些繁琐的配置和部署步骤？</h2><ul><li>SpringBoot就是一个可以简化整合过程中复杂配置的框架</li></ul><h1 id="二、SpringBoot简介"><a href="#二、SpringBoot简介" class="headerlink" title="二、SpringBoot简介"></a>二、SpringBoot简介</h1><h2 id="2-1、概念"><a href="#2-1、概念" class="headerlink" title="2.1、概念"></a>2.1、概念</h2><ul><li>随着动态语言的流行、Java语言的开发就显得格外笨重：配置繁琐、开发效率低、项目的部署变得复杂、集成第三方技术难度大。</li><li>在这种情况下，SpringBoot应运而生</li><li><strong>SpringBoot采用了<code>习惯大于配置/约定大于配置</code>的理念快速的搭建项目的开发环境，我们无需或者很少的相关配置就能够快速的将项目运行起来</strong></li></ul><h2 id="2-2、优点"><a href="#2-2、优点" class="headerlink" title="2.2、优点"></a>2.2、优点</h2><ul><li>能够快速的搭建项⽬</li><li>对主流的开发框架都提供了⽆配置集成（Spring-Boot内置了配置）</li><li>项⽬可以独⽴运⾏、⽆需单独配置Servlet容器（内置了Tomcat）</li><li>极⼤提⾼了开发、部署效率</li><li>提供了运⾏时监控系统（⽇志等）</li><li>与云原⽣有天然的集成</li></ul><h2 id="2-3、缺点"><a href="#2-3、缺点" class="headerlink" title="2.3、缺点"></a>2.3、缺点</h2><ul><li>由于配置都是内置的，报错时定位⽐较困难</li><li>版本迭代速度⽐较快、有些版本改动还是⽐较⼤（增加学习成本）</li></ul><h1 id="三、第一个SpringBoot应用"><a href="#三、第一个SpringBoot应用" class="headerlink" title="三、第一个SpringBoot应用"></a>三、第一个SpringBoot应用</h1><blockquote><p>体验：基于SpringBoot整合SpringMVC<br>SpringBoot应⽤需要依赖远程服务器进⾏创建</p><p>远程服务器：</p><ul><li>Spring官⽅： <a href="https://start.spring.io/">https://start.spring.io</a></li><li>ali： <a href="https://start.aliyun.com/">https://start.aliyun.com</a></li></ul></blockquote><h2 id="3-1、创建项目"><a href="#3-1、创建项目" class="headerlink" title="3.1、创建项目"></a>3.1、创建项目</h2><h3 id="3-1-1、File—New—Project"><a href="#3-1-1、File—New—Project" class="headerlink" title="3.1.1、File—New—Project"></a>3.1.1、File—New—Project</h3><p><img src="/2022/03/03/SpringBoot/image-20220121201612972.png" alt="image-20220121201612972"></p><h3 id="3-1-2、填写项⽬信息"><a href="#3-1-2、填写项⽬信息" class="headerlink" title="3.1.2、填写项⽬信息"></a>3.1.2、填写项⽬信息</h3><p><img src="/2022/03/03/SpringBoot/image-20220122083916026.png" alt="image-20220122083916026"></p><h3 id="3-1-3、选择项⽬依赖"><a href="#3-1-3、选择项⽬依赖" class="headerlink" title="3.1.3、选择项⽬依赖"></a>3.1.3、选择项⽬依赖</h3><p><img src="/2022/03/03/SpringBoot/image-20220122083937257.png" alt="image-20220122083937257"></p><h3 id="3-1-4、选择项⽬存储⽬录"><a href="#3-1-4、选择项⽬存储⽬录" class="headerlink" title="3.1.4、选择项⽬存储⽬录"></a>3.1.4、选择项⽬存储⽬录</h3><p><img src="/2022/03/03/SpringBoot/image-20220122083955234.png" alt="image-20220122083955234"></p><h3 id="3-1-5、网页创建SpringBoot应用"><a href="#3-1-5、网页创建SpringBoot应用" class="headerlink" title="3.1.5、网页创建SpringBoot应用"></a>3.1.5、网页创建SpringBoot应用</h3><p>如果基于IDEA创建⽆法下载，可以基于⽹⻚版进⾏创建</p><p><img src="/2022/03/03/SpringBoot/image-20220122084037554.png" alt="image-20220122084037554"></p><h2 id="3-2、配置项目"><a href="#3-2、配置项目" class="headerlink" title="3.2、配置项目"></a>3.2、配置项目</h2><h3 id="3-2-1、应⽤项⽬结构"><a href="#3-2-1、应⽤项⽬结构" class="headerlink" title="3.2.1、应⽤项⽬结构"></a>3.2.1、应⽤项⽬结构</h3><p><img src="/2022/03/03/SpringBoot/image-20220122084209836.png" alt="image-20220122084209836"></p><p>3.2.2、⾃定义配置(整合MyBatis)</p><blockquote><p>SpringBoot帮助我们完成通⽤性配置，但是像数据库连接地址、账号、密码等还是需要⼿动完成配置</p></blockquote><ul><li><p>修改mysql驱动的版本（选择性）</p><p><img src="/2022/03/03/SpringBoot/image-20220122092921532.png" alt="image-20220122092921532"></p></li><li><p>在SpringBoot主配置⽂件<code>application.properties</code>⽂件中配置数据源及路径</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据源 （key必须按照SpringBoot的要求）</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/db_2010_mybatis?characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">admin123</span></span><br><span class="line"><span class="comment"># 配置映射⽂件路径及实体类的包名</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mappers/*Mapper.xml</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.qfedu.springboot.demo.entity</span></span><br></pre></td></tr></table></figure></li><li><p>在SpringBoot启动类通过<code>@MapperScan</code>注解指定DAO接⼝的包名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.xu.springboot.demo1.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootDemo1Application</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootDemo1Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-3、启动项目"><a href="#3-3、启动项目" class="headerlink" title="3.3、启动项目"></a>3.3、启动项目</h2><h3 id="3-3-1、启动"><a href="#3-3-1、启动" class="headerlink" title="3.3.1、启动"></a>3.3.1、启动</h3><blockquote><p>SpringBoot应⽤⾃带Servlet容器—Tomcat,因此⽆需进⾏额外的服务器配置，运⾏启动类即可启动⼀个SpringBoot应⽤</p></blockquote><h3 id="3-3-2、测试"><a href="#3-3-2、测试" class="headerlink" title="3.3.2、测试"></a>3.3.2、测试</h3><blockquote><p>⽤户的注册功能</p></blockquote><p>新知识：主键回填</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertBook&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    insert into t_book (b_name,author) values (#&#123;name&#125;,#&#123;author&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​        这种方式比较简单，就是在插入节点上添加 useGeneratedKeys 属性，同时设置接收回传主键的属性。配置完成后，我们执行一个插入操作，插入时传入一个对象，插入完成后，这个对象的 id 就会被自动赋值，值就是刚刚插入成功的id。</p><ol><li><p>创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Date birthday;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>Dao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Service</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">userRegist</span><span class="params">(User user)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//实现类</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">userRegist</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userDao.addUser(user);</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>  user;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">refist</span><span class="params">(User user)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.userRegist(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><a href="http://localhost:8080/user/add?name=2www&amp;password=1223">http://localhost:8080/user/add?name=2www&amp;password=1223</a></p></li><li><p>注意，数据库id需要支持自增长，否则会报错。</p></li></ol><h1 id="四、SpringBoot原理"><a href="#四、SpringBoot原理" class="headerlink" title="四、SpringBoot原理"></a>四、SpringBoot原理</h1><h2 id="4-1、starter"><a href="#4-1、starter" class="headerlink" title="4.1、starter"></a>4.1、starter</h2><blockquote><p>⼀个starter就是⼀个开发场景的⽀持（ 依赖 + 配置）<br>SpringBoot为我们提供了简化企业级开发绝⼤多数场景的⽀持（提供了多个starter），我们在进⾏项⽬开发的过程中只需引⼊对应的starter（创建SpringBoot应⽤时可选择），相关的依赖和配置就会被内置到项⽬中（消除⼈⼯配置）。</p></blockquote><h3 id="4-1-1、starter依赖"><a href="#4-1-1、starter依赖" class="headerlink" title="4.1.1、starter依赖"></a>4.1.1、starter依赖</h3><blockquote><p>⼀个starter依赖表示的不是⼀个依赖，⽽是某种开发环境所需的⼀组依赖</p></blockquote><ul><li>Spring Web —<code>spring-boot-starter-web</code></li><li>MyBatis Framework — <code>mybatis-spring-boot-starter</code></li></ul><h3 id="4-1-2、starter配置"><a href="#4-1-2、starter配置" class="headerlink" title="4.1.2、starter配置"></a>4.1.2、starter配置</h3><blockquote><p>⼀个starter不仅包含所需依赖，还包含了其所需的对应的配置</p></blockquote><ul><li><p>MyBatis Framework — <code>mybatis-spring-boot-starter</code></p><ul><li><p>依赖</p><p><img src="/2022/03/03/SpringBoot/image-20220122184449394.png" alt="image-20220122184449394"></p></li><li><p>配置</p><p><img src="/2022/03/03/SpringBoot/image-20220122184509717.png" alt="image-20220122184509717"></p></li></ul></li></ul><h3 id="4-1-3、案例"><a href="#4-1-3、案例" class="headerlink" title="4.1.3、案例"></a>4.1.3、案例</h3><blockquote><p>引⼊redis开发场景</p></blockquote><ul><li><p>添加starter依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在service中可以直接注⼊redis客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserDAO userDAO;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-2、SpringBoot应⽤的pom⽂件"><a href="#4-2、SpringBoot应⽤的pom⽂件" class="headerlink" title="4.2、SpringBoot应⽤的pom⽂件"></a>4.2、SpringBoot应⽤的pom⽂件</h2><h3 id="4-2-1、基于Spring官⽅服务器创建的SpringBoot应⽤"><a href="#4-2-1、基于Spring官⽅服务器创建的SpringBoot应⽤" class="headerlink" title="4.2.1、基于Spring官⽅服务器创建的SpringBoot应⽤"></a>4.2.1、基于Spring官⽅服务器创建的SpringBoot应⽤</h3><ul><li>继承spring-boot-starter-parent.pom</li></ul><p>为什么只输入starter就可以出来版本号？是因为在父pom中已经定义。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchemainstance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-</span></span></span><br><span class="line"><span class="string"><span class="tag">                             4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- SpringBoot应⽤中的pom 继承了spring-boot-starter-parent.pom --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- spring-boot-starter-parent.pom⼜继承了spring-boot-dependencies.pom--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 在spring-boot-dependencies.pom已经对主流的框架的版本进⾏了声明 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>引⼊了maven对springboot应⽤⽀持的插件 spring-boot</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xu.springboot.demo1.SpringbootDemo1Application<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">id</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-2-2、基于ali服务器创建的SpringBoot应⽤"><a href="#4-2-2、基于ali服务器创建的SpringBoot应⽤" class="headerlink" title="4.2.2、基于ali服务器创建的SpringBoot应⽤"></a>4.2.2、基于ali服务器创建的SpringBoot应⽤</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchemainstance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="string"><span class="tag">                             https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.qfedu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-demo2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>springboot-demo2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--SpringBoot应⽤的pom没有继承spring-boot-starter-parent.pom，因此版本需要在当前pom中进⾏定义 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.3.7.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.qfedu.springboot.demo2.SpringbootDemo2Application<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">id</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">goal</span>&gt;</span>repackage<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-3、java配置方式"><a href="#4-3、java配置方式" class="headerlink" title="4.3、java配置方式"></a>4.3、java配置方式</h2><blockquote><p>如果我们需要在SpringBoot应⽤中整合⼀种新的开发场景，只需在pom.xml引⼊对应的starter即可</p><p>⼀个starter不仅包含依赖，还包含相应的配置，starter中包含的配置都是通过Java类实现的–Java配置⽅式</p></blockquote><h3 id="4-3-1、Spring版本发展"><a href="#4-3-1、Spring版本发展" class="headerlink" title="4.3.1、Spring版本发展"></a>4.3.1、Spring版本发展</h3><blockquote><p>随着Spring版本的迭代，配置⽅式也在发⽣变化</p></blockquote><ul><li>Spring 1.x<ul><li>所有的bean的配置只能通过xml完成</li></ul></li><li>Spring 2.x<ul><li>基于JDK1.5对注解的⽀持，Spring 2.x开始⽀持注解</li><li>企业开发中到底是⽤xml配置还是⽤注解？<ul><li>对基础配置、引⽤的第三⽅依赖中的配置使⽤xml完成：例如数据源配置</li><li>业务开发使⽤注解：例如controller、service</li></ul></li></ul></li><li>Spring 3.x<ul><li>Spring 开始提供基于Java的配置⽅式</li></ul></li><li>Spring 4.x<ul><li>xml、注解、Java</li></ul></li></ul><h3 id="4-3-2、xml配置"><a href="#4-3-2、xml配置" class="headerlink" title="4.3.2、xml配置"></a>4.3.2、xml配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--applicationContext.xml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.qfedu.beans.Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;date&quot;</span> <span class="attr">class</span>=<span class="string">&quot;java.util.Date&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-3、注解配置"><a href="#4-3-3、注解配置" class="headerlink" title="4.3.3、注解配置"></a>4.3.3、注解配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-4、Java配置⽅式"><a href="#4-3-4、Java配置⽅式" class="headerlink" title="4.3.4、Java配置⽅式"></a>4.3.4、Java配置⽅式</h3><ul><li>创建配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getDate</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-4、SpringBoot⾃动配置过程（重点掌握）"><a href="#4-4、SpringBoot⾃动配置过程（重点掌握）" class="headerlink" title="4.4、SpringBoot⾃动配置过程（重点掌握）"></a>4.4、SpringBoot⾃动配置过程（重点掌握）</h2><p><img src="/2022/03/03/SpringBoot/image-20220124112627046.png" alt="image-20220124112627046"></p><h2 id="4-5、全局配置⽂件"><a href="#4-5、全局配置⽂件" class="headerlink" title="4.5、全局配置⽂件"></a>4.5、全局配置⽂件</h2><blockquote><p>SpringBoot针对不同的开发场景提供默认的属性配置，如果默认的配置不能满⾜开发的需要，我们需要对属<br>性配置进⾏修改</p></blockquote><ul><li>SpringBoot应⽤提供了⼀个全局配置⽂件<code>application.properties</code>⽤于进⾏⾃定义配置</li><li>全局配置⽂件⽀持2中语法配置：<ul><li>properties 键值对配置</li><li>yaml 语法的配置</li></ul></li></ul><h3 id="4-5-1、基于properties配置"><a href="#4-5-1、基于properties配置" class="headerlink" title="4.5.1、基于properties配置"></a>4.5.1、基于properties配置</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置数据源 （key必须按照SpringBoot的要求）</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/test?characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">root</span></span><br><span class="line"><span class="comment"># 配置映射⽂件路径及实体类的包名</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mapper/*Mapper.xml</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.example.demo1.pojo</span></span><br></pre></td></tr></table></figure><h3 id="4-5-2、基于yaml配置"><a href="#4-5-2、基于yaml配置" class="headerlink" title="4.5.2、基于yaml配置"></a>4.5.2、基于yaml配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_2010_mybatis?characterEncoding=utf-8</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">admin123</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">    <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*Mapper.xml</span></span><br><span class="line">    <span class="attr">type-aliases-package:</span> <span class="string">com.qfedu.springboot.demo.entity</span></span><br></pre></td></tr></table></figure><h3 id="4-5-3、常⽤的全局配置"><a href="#4-5-3、常⽤的全局配置" class="headerlink" title="4.5.3、常⽤的全局配置"></a>4.5.3、常⽤的全局配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line">    <span class="attr">servlet:</span></span><br><span class="line">        <span class="attr">context-path:</span> <span class="string">/demo1</span></span><br></pre></td></tr></table></figure><h2 id="4-6、⾃定义Banner"><a href="#4-6、⾃定义Banner" class="headerlink" title="4.6、⾃定义Banner"></a>4.6、⾃定义Banner</h2><ul><li><p>在SpringBoot应⽤启动的时候是有⼀个默认启动图案的</p></li><li><p>这个默认图案⽀持⾃定义配置</p><ul><li>在resources⽬录创建⼀个banner.txt</li><li>在banner.txt⽂件中定义图案 <a href="http://patorjk.com/software/taag/">http://patorjk.com/software/taag/</a></li></ul></li><li><p>佛祖保佑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">////////////////////////////////////////////////////////////////////</span><br><span class="line">// _ooOoo_ //</span><br><span class="line">// o8888888o //</span><br><span class="line">// 88&quot; . &quot;88 //</span><br><span class="line">// (| ^_^ |) //</span><br><span class="line">// O\ = /O //</span><br><span class="line">// ____/`---&#x27;\____ //</span><br><span class="line">// .&#x27; \\| |// `. //</span><br><span class="line">// / \\||| : |||// \ //</span><br></pre></td></tr></table></figure></li></ul><h1 id="五、SpringBoot整合JSP"><a href="#五、SpringBoot整合JSP" class="headerlink" title="五、SpringBoot整合JSP"></a>五、SpringBoot整合JSP</h1><blockquote><p>SpringBoot应⽤默认⽀持的动态⽹⻚技术是Thymeleaf，并不⽀持JSP；因此在SpringBoot应⽤想要使⽤JSP需要通过⼿动整合来实现</p></blockquote><h2 id="5-1、-添加依赖"><a href="#5-1、-添加依赖" class="headerlink" title="5.1、 添加依赖"></a>5.1、 添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.0.45<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-2、-创建JSP⻚⾯"><a href="#5-2、-创建JSP⻚⾯" class="headerlink" title="5.2、 创建JSP⻚⾯"></a>5.2、 创建JSP⻚⾯</h2><ul><li>修改pom⽂件打包⽅式为war</li><li>在main中创建webapp⽬录</li><li>在webapp创建.jsp⻚⾯</li></ul><h2 id="5-3、将JSP⻚⾯放在WEB-INF中的访问"><a href="#5-3、将JSP⻚⾯放在WEB-INF中的访问" class="headerlink" title="5.3、将JSP⻚⾯放在WEB-INF中的访问"></a>5.3、将JSP⻚⾯放在WEB-INF中的访问</h2><ul><li><p><strong>将JSP⽂件存放到WEB-INF⽬录(只能通过controller进行访问)</strong></p></li><li><p>在application.yml⽂件配置SpringMVC视图解析⽅式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">view:</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">/WEB-INF/</span></span><br><span class="line">      <span class="attr">suffix:</span> <span class="string">.jsp</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*Mapper.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.example.demo1.pojo</span></span><br></pre></td></tr></table></figure></li><li><p>创建PageController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/index.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><a href="http://localhost:8080/index.html">http://localhost:8080/index.html</a></p><h1 id="六、基于SpringBoot的SSM整合"><a href="#六、基于SpringBoot的SSM整合" class="headerlink" title="六、基于SpringBoot的SSM整合"></a>六、基于SpringBoot的SSM整合</h1><h2 id="6-1、创建Springboot项⽬"><a href="#6-1、创建Springboot项⽬" class="headerlink" title="6.1、创建Springboot项⽬"></a>6.1、创建Springboot项⽬</h2><ul><li><p>创建项⽬时添加依赖</p><ul><li>lombok</li><li>spring  web</li><li>mysql driver</li><li>mybatis framework</li></ul></li><li><p>修改mysql驱动的版本（可选）    因为8.0的版本需要加jc</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pom.xml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="6-2、进⾏MyBatis所需的配置"><a href="#6-2、进⾏MyBatis所需的配置" class="headerlink" title="6.2、进⾏MyBatis所需的配置"></a>6.2、进⾏MyBatis所需的配置</h2><ul><li><p>将默认创建的application.properties后缀名修改为 &#x3D;&#x3D;yml&#x3D;&#x3D; (根据习惯可选)</p></li><li><p>完成MyBatis的⾃定义配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"> <span class="attr">datasource:</span></span><br><span class="line">     <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">     <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_2010_mybatis?characterEncoding=utf-8</span></span><br><span class="line">     <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">     <span class="attr">password:</span> <span class="string">admin123</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line"> <span class="attr">type-aliases-package:</span> <span class="string">com.qfedu.springboot.ssm.beans</span></span><br><span class="line"> <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*Mapper.xml</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="6-3、在启动类配置DAO扫描"><a href="#6-3、在启动类配置DAO扫描" class="headerlink" title="6.3、在启动类配置DAO扫描"></a>6.3、在启动类配置DAO扫描</h2><ul><li><p>@MapperScan</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.qfedu.springboot.ssm.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootSsmApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootSsmApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="6-4、整合Druid连接池"><a href="#6-4、整合Druid连接池" class="headerlink" title="6.4、整合Druid连接池"></a>6.4、整合Druid连接池</h2><blockquote><p>在SpringBoot中整合MyBatis的时候，默认集成了Hikari连接池，Hikari的效率⽐Druid要⾼，但是得益于Druid提供了⽐较便捷的监控系统在企业开发中，druid使⽤还是最多的。</p></blockquote><h3 id="6-4-1、添加druid的starter"><a href="#6-4-1、添加druid的starter" class="headerlink" title="6.4.1、添加druid的starter"></a>6.4.1、添加druid的starter</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-4-2、配置druid数据源"><a href="#6-4-2、配置druid数据源" class="headerlink" title="6.4.2、配置druid数据源"></a>6.4.2、配置druid数据源</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?characterEncoding=utf-8</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><h1 id="七、Thymeleaf"><a href="#七、Thymeleaf" class="headerlink" title="七、Thymeleaf"></a>七、Thymeleaf</h1><blockquote><p>Thymeleaf是⼀种类似于JSP的动态⽹⻚技术</p></blockquote><h2 id="7-1-、Thymeleaf简介"><a href="#7-1-、Thymeleaf简介" class="headerlink" title="7.1 、Thymeleaf简介"></a>7.1 、Thymeleaf简介</h2><ul><li><p>JSP 必须依赖Tomcat运⾏，不能直接运⾏在浏览器中</p></li><li><p>HTML可以直接运⾏在浏览器中，但是不能接收控制器（后端）传递的数据</p></li><li><p>Thymeleaf是⼀种既保留了HTML的后缀能够直接在浏览器运⾏的能⼒、⼜实现了JSP显示动态数据的功能——</p><p>静能查看⻚⾯效果、动则可以显示数据</p></li></ul><h2 id="7-2、Thymeleaf的使⽤"><a href="#7-2、Thymeleaf的使⽤" class="headerlink" title="7.2、Thymeleaf的使⽤"></a>7.2、Thymeleaf的使⽤</h2><blockquote><p>SpringBoot应⽤对Thymeleaf提供了良好的⽀持</p></blockquote><h3 id="7-2-1、添加thymeleaf的starter"><a href="#7-2-1、添加thymeleaf的starter" class="headerlink" title="7.2.1、添加thymeleaf的starter"></a>7.2.1、添加thymeleaf的starter</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-2、创建Thymeleaf模板"><a href="#7-2-2、创建Thymeleaf模板" class="headerlink" title="7.2.2、创建Thymeleaf模板"></a>7.2.2、创建Thymeleaf模板</h3><blockquote><p>Thymeleaf模板就是HTML⽂件(不过是添加了一个命名空间)</p></blockquote><ul><li><p>SpringBoot应⽤中 <code>resources\templates </code>⽬录就是⽤来存放⻚⾯模板的</p></li><li><p><code>重要说明：</code></p><ul><li><p>static ⽬录下的资源被定义静态资源，SpringBoot应⽤默认放⾏；如果将HTML⻚⾯创建static⽬录是可以</p><p>直接访问的</p></li></ul></li><li><p>templates ⽬录下的⽂件会被定义为动态⽹⻚模板，SpringBoot应⽤会拦截templates中定义的资源；如果将</p><p>HTML⽂件定义在templates⽬录，则必须通过控制器跳转访问。</p></li><li><p>在templates创建HTML⻚⾯模板</p></li><li><p>创建PageController，⽤于转发允许”直接访问”的⻚⾯请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/page&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test.html&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>注意</code>：需要注意的是Thymeleaf模板不需要指定前缀和后缀，已经指定了默认值</p><p><img src="/2022/03/03/SpringBoot/image-20220211111634326.png" alt="image-20220211111634326"></p></li></ul><h2 id="7-3、Thymeleaf基本语法"><a href="#7-3、Thymeleaf基本语法" class="headerlink" title="7.3、Thymeleaf基本语法"></a>7.3、Thymeleaf基本语法</h2><blockquote><p>如果要在Thymeleaf</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/103089477">SpringBoot【Thymeleaf篇】 - 知乎 (zhihu.com)</a></p><h3 id="7-3-1、在thymeleaf模板⻚⾯引⼊th标签的命名空间"><a href="#7-3-1、在thymeleaf模板⻚⾯引⼊th标签的命名空间" class="headerlink" title="7.3.1、在thymeleaf模板⻚⾯引⼊th标签的命名空间"></a>7.3.1、在thymeleaf模板⻚⾯引⼊th标签的命名空间</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-3-2、th-text"><a href="#7-3-2、th-text" class="headerlink" title="7.3.2、th:text"></a>7.3.2、th:text</h3><blockquote><p>在⼏乎所有的HTML双标签都可以使⽤ th:text属性，将接收到的数据显示在标签的内容中</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;price&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span>   //int</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;str&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> //字符串</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;book.bookName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>//对象</span><br></pre></td></tr></table></figure><h3 id="7-3-3、th-inline-内联"><a href="#7-3-3、th-inline-内联" class="headerlink" title="7.3.3、th:inline 内联"></a>7.3.3、th:inline 内联</h3><ul><li><p>HTML内联</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:inline</span>=<span class="string">&quot;text&quot;</span>&gt;</span>图书名称：[[$&#123;book.bookName&#125;]]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>CSS内联</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">th:inline</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.style1</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>:[[$&#123;<span class="attribute">color</span>&#125;]]</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>JavaScript内联</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;css/javascript&quot;</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="7-3-4、th-object-和"><a href="#7-3-4、th-object-和" class="headerlink" title="7.3.4、th:object 和 *"></a>7.3.4、th:object 和 *</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;book&#125;&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;bookId&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;bookName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;bookAuthor&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/SpringBoot/v2-23dfc3cab29610643a2a7d40e352a9dd_r.jpg" alt="preview"></p><h2 id="7-4、流程控制"><a href="#7-4、流程控制" class="headerlink" title="7.4、流程控制"></a>7.4、流程控制</h2><h3 id="7-4-1、th-each-循环"><a href="#7-4-1、th-each-循环" class="headerlink" title="7.4.1、th:each 循环"></a>7.4.1、th:each 循环</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">&quot;width: 600px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>图书信息列表<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>图书ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>图书名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>作者<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;b:$&#123;books&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;b.bookId&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;b.bookName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;b.bookAuthor&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4-2、分⽀"><a href="#7-4-2、分⽀" class="headerlink" title="7.4.2、分⽀"></a>7.4.2、分⽀</h3><ul><li><p>th:if 如果条件不成⽴，则不显示此标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;b.bookPrice&#125;&gt;40&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span>太贵！！！<span class="tag">&lt;/<span class="name">td</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;b.bookPrice&#125;&gt;40&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:red&quot;</span>&gt;</span>太贵！！！<span class="tag">&lt;/<span class="name">td</span>&gt;</span> //等同于取反</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;b.bookPrice&#125;&lt;=40&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:green&quot;</span>&gt;</span>推荐购买<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>th:switch 和 th:case</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;b.bookPrice&#125;/10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;3&quot;</span>&gt;</span>建议购买<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;4&quot;</span>&gt;</span>价格合理<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>价格不合理<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;user.gender&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;M&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;F&quot;</span>&gt;</span>⼥<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>性别不详<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="7-5、碎片使用"><a href="#7-5、碎片使用" class="headerlink" title="7.5、碎片使用"></a>7.5、碎片使用</h2><h3 id="7-5-1-碎⽚的概念"><a href="#7-5-1-碎⽚的概念" class="headerlink" title="7.5.1 碎⽚的概念"></a>7.5.1 碎⽚的概念</h3><blockquote><p>碎⽚，就是HTML⽚段，我们可以将多个⻚⾯中使⽤的相同的HTML标签部分单独定义，然后通过th:include可以在HTML⽹⻚中引⼊定义的碎⽚</p></blockquote><p><img src="/2022/03/03/SpringBoot/image-20220211152305130.png" alt="image-20220211152305130"></p><h3 id="7-5-2-碎⽚使⽤案例"><a href="#7-5-2-碎⽚使⽤案例" class="headerlink" title="7.5.2 碎⽚使⽤案例"></a>7.5.2 碎⽚使⽤案例</h3><ul><li><p>定义碎⽚ th:fragment</p><ul><li><p>header.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;fragment1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 80px;background: deepskyblue;</span></span></span><br><span class="line"><span class="string"><span class="tag">                                            color:white; font-size: 25px;&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">            呜啦啦   头部碎片</span></span></span><br><span class="line"><span class="string"><span class="tag">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">    &lt;/body&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">&lt;/html&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>footer.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;fragment2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 80px;background: deepskyblue;</span></span></span><br><span class="line"><span class="string"><span class="tag">                                            color:white; font-size: 25px;&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">            呜啦啦   脚部碎片</span></span></span><br><span class="line"><span class="string"><span class="tag">        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">    &lt;/body&gt;</span></span></span><br><span class="line"><span class="string"><span class="tag">&lt;/html&gt;</span></span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>引⽤碎⽚ th:include 和 th:replace(区别：include不带样式，replace带样式)</p><ul><li><p>a.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div th:include=&quot;header::fragment1&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;header::fragment1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 500px&quot;</span>&gt;</span></span><br><span class="line">            定义内容</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div th:include=&quot;footer::fragment2&quot;&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;footer::fragment2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="⼋、SpringBoot应⽤的热部署配置"><a href="#⼋、SpringBoot应⽤的热部署配置" class="headerlink" title="⼋、SpringBoot应⽤的热部署配置"></a>⼋、SpringBoot应⽤的热部署配置</h1><h2 id="8-1-热部署"><a href="#8-1-热部署" class="headerlink" title="8.1 热部署"></a>8.1 热部署</h2><blockquote><p>项⽬⾸次部署、服务启动之后，如果应⽤发⽣了变化、⽽且IDEA感知到了应⽤的变化，就⾃动的完成jar的更新，⽆需⼿动再次启动服务器，就可以访问应⽤的更新。</p></blockquote><h2 id="8-2-热部署配置"><a href="#8-2-热部署配置" class="headerlink" title="8.2 热部署配置"></a>8.2 热部署配置</h2><h3 id="8-2-1-IDE配置（idea）"><a href="#8-2-1-IDE配置（idea）" class="headerlink" title="8.2.1 IDE配置（idea）"></a>8.2.1 IDE配置（idea）</h3><ul><li><p>File—settings</p><p><img src="/2022/03/03/SpringBoot/image-20220211154449689.png" alt="image-20220211154449689"></p></li><li><p>高级选项</p></li></ul><p><img src="/2022/03/03/SpringBoot/image-20220211154333608.png" alt="image-20220211154333608"></p><h3 id="8-2-2-SpringBoot项⽬配置"><a href="#8-2-2-SpringBoot项⽬配置" class="headerlink" title="8.2.2 SpringBoot项⽬配置"></a>8.2.2 SpringBoot项⽬配置</h3><ul><li><p>在需要进⾏热部署的SpringBoot应⽤中添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置SpringBoot的Maven插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.xu.springssm.SpringSsmApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置SpringBoot应⽤的变化更新策略</p><p><img src="/2022/03/03/SpringBoot/image-20220211155728717.png" alt="image-20220211155728717"></p></li></ul><p>热部署会在你切换到另一个文件之后开始热部署。 </p>]]></content>
    
    
    <summary type="html">这个笔记是在做实战项目蜂蜜商城时候，补充的知识点，较为基础。包括简介、部署、整合SSM、Thymeleaf模板等</summary>
    
    
    
    <category term="SpringBoot" scheme="http://xuzb0312.github.io/categories/SpringBoot/"/>
    
    
    <category term="Java" scheme="http://xuzb0312.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
